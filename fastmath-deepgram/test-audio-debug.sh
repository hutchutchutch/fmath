#!/bin/bash

echo "🔍 Audio Debugging Guide"
echo "======================="
echo ""
echo "1. First, check that all required environment variables are set:"
echo "   - DEEPGRAM_API_KEY"
echo "   - GROQ_API_KEY"
echo ""
echo "2. Restart the backend server:"
echo "   cd backend && npm run dev"
echo ""
echo "3. Open the frontend in your browser:"
echo "   http://localhost:3000"
echo ""
echo "4. Click 'Start' and speak a number clearly"
echo ""
echo "5. Watch for these messages in the backend console:"
echo ""
echo "Expected Backend Logs:"
echo "---------------------"
echo "✅ Groq service initialized"
echo "🔌 New audio stream WebSocket connection"
echo "📡 Audio stream connected for room: default, participant: user"
echo "🔄 Connecting to Deepgram..."
echo "✅ Connected to Deepgram WebSocket"
echo "✅ Deepgram connected"
echo ""
echo "Then you should see:"
echo "📤 PCM16 chunk #1 received for Deepgram, size: [bytes]"
echo "🎵 Handling PCM16 audio data for Deepgram"
echo "📹 WebM chunk #1 received for Groq, size: [bytes]"
echo "🎯 Processing WebM chunk with Groq"
echo ""
echo "And finally transcriptions:"
echo "📝 DEEPGRAM transcription: { text: '...', number: ..., latency: ... }"
echo "📝 GROQ transcription: { text: '...', number: ..., latency: ... }"
echo "🚀 Emitting transcription event"
echo ""
echo "6. Check the browser console for:"
echo "   - SSE messages with transcription data"
echo "   - Updated transcription results in the UI"
echo ""
echo "Common Issues:"
echo "--------------"
echo "❌ 'GROQ_API_KEY not found' - Add GROQ_API_KEY to backend/.env"
echo "❌ 'Deepgram not ready' - Check DEEPGRAM_API_KEY in backend/.env"
echo "❌ 'Empty WebM buffer' - Browser might not support WebM recording"
echo "❌ No audio chunks received - Check microphone permissions"
echo ""
echo "Press Ctrl+C to exit"